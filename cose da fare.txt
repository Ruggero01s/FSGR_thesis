wandb tutorial
prendere I tre file spacchettarli


togliere I goal dal dataset e fargli predirre il goal
il plan viene bucato di una tot percentuale

vedere un po' nel training, validation e test fare un po' di studio di dati
vedere quanti piani, lunghezza
quali fluenti vengono raggiunti nei goal
quanti oggetti



Numero di plan sono attorno ai 40k-50k circa
Domain sono ben distribuiti sia in plan length che in numero di oggetti coinvolti nel plan (tutti quelli nell'init più quelli coinvolti in azioni durante il plan)

logistics e zeno come goal hanno un insieme di |at objx posy|
blockworld un po' di tutto, clear, on, on table,
satellite |have-image (phenomenon/star/pianeta sono delle direzioni) modo di cattura| e |pointing sat direzione|



genero set a caso dai filler
poi while rec < classe swappo uno random con un fluente del current
    se rec > classe invece identifico un fluente uguale ad uno del current e swappo con uno randomico
    
    fluent_to_swap: at obj11 pos11
    present_base_goal_fluents: ['at obj11 pos11']
    candidates_list: [['at obj33 pos21', 'at obj11 pos11', 'at obj12 pos23', 'at obj55 pos55'], ['at obj55 pos44', 'at obj13 pos21', 'at obj88 pos66', 'at obj33 pos23'], ['at obj00 pos44', 'at obj12 pos11', 'at obj13 pos55', 'at obj33 pos33'], ['at obj23 pos33', 'at obj88 pos22', 'at obj13 pos55', 'at obj44 pos11'], ['at obj23 pos13', 'at obj11 pos21', 'at obj66 pos33', 'at obj33 pos23'], ['at obj33 pos44', 'at obj00 pos22', 'at obj13 pos21', 'at obj88 pos66'], ['at obj11 pos21', 'at obj23 pos33', 'at obj44 pos13', 'at obj88 pos11']]
    goal_state: ['at obj33 pos21', 'at obj11 pos11', 'at obj12 pos23', 'at obj55 pos55']



devo fare una struttura per tenere i piani originali con le loro versioni immagino, o si può fare per nome dopo in realtà

per arrivare ai piani devono essere risolto
    per risolverli bisogna runnare fast downward
        per runnare serve un script che lo fa partire
            vogliamo che sia parallelo quindi serve uno script per piano
                per generare gli script si usa run experiment


{'Top1_Acc_MB/train_phase/train_stream/Task000': 1.0, 'Loss_MB/train_phase/train_stream/Task000': 0.015492322854697704, 
'Top1_Acc_Epoch/train_phase/train_stream/Task000': 1.0, 'Loss_Epoch/train_phase/train_stream/Task000': 0.019019514361412086, 
'Top1_Acc_Exp/eval_phase/test_stream/Task000/Exp000': 0.9912280701754386, 'Loss_Exp/eval_phase/test_stream/Task000/Exp000': 0.05138364852520458, 
'Top1_Acc_Stream/eval_phase/test_stream/Task000': 0.9912280701754386, 'Loss_Stream/eval_phase/test_stream/Task000': 0.05138364852520458, 
'StreamForgetting/eval_phase/test_stream': 0.0, 'ExperienceForgetting/eval_phase/test_stream/Task000/Exp000': 0.0}

{'Top1_Acc_MB/train_phase/train_stream/Task000': 1.0, 'Loss_MB/train_phase/train_stream/Task000': 0.012979770079255104, 
'Top1_Acc_Epoch/train_phase/train_stream/Task000': 1.0, 'Loss_Epoch/train_phase/train_stream/Task000': 0.015673329354542978, 
'Top1_Acc_Exp/eval_phase/test_stream/Task000/Exp000': 0.9912280701754386, 'Loss_Exp/eval_phase/test_stream/Task000/Exp000': 0.05046273401954718, 
'Top1_Acc_Stream/eval_phase/test_stream/Task000': 0.9912280701754386, 'Loss_Stream/eval_phase/test_stream/Task000': 0.05046273401954718, 
'StreamForgetting/eval_phase/test_stream': 0.0, 'ExperienceForgetting/eval_phase/test_stream/Task000/Exp000': 0.0}

{'Top1_Acc_MB/train_phase/train_stream/Task000': 1.0, 'Loss_MB/train_phase/train_stream/Task000': 0.010983709245920181, 
'Top1_Acc_Epoch/train_phase/train_stream/Task000': 1.0, 'Loss_Epoch/train_phase/train_stream/Task000': 0.013151053380635049, 
'Top1_Acc_Exp/eval_phase/test_stream/Task000/Exp000': 0.9912280701754386, 'Loss_Exp/eval_phase/test_stream/Task000/Exp000': 0.05076794156379867, 
'Top1_Acc_Stream/eval_phase/test_stream/Task000': 0.9912280701754386, 'Loss_Stream/eval_phase/test_stream/Task000': 0.05076794156379867, 
'StreamForgetting/eval_phase/test_stream': 0.0, 'ExperienceForgetting/eval_phase/test_stream/Task000/Exp000': 0.0}